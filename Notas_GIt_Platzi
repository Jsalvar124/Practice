Comandos de git bash

cd (change directory)

cd / ir a la raiz.

ls (list)

ls -al (mostrar también archivos ocultos)

ls -l (lusta todos los archivos)

ls -a (muestra los archivos en bloque)

clear 

crlt+ L (clear)

cd .. (regresar a la carpeta anterior)

windows no distingue enre mayusculas y minúsculas. Mac y linux sí hacen esta distinción.

con tab, se autocompleta

cd, le damos donde queramos que esten nuestros archivos cuando estámos ahi nos aparece ~

pwd es para que nos muestre la ruta donde estamos parados.

touch documento.txt (crea un docuemnto vacio de texto plano)

mkdir Nombre (crea una carpeta en la ruta especificada)

cat (mostrar en consola el contenido de un archivo)

history (muestra el historial de comandos de la terminal)

para acceder a un comando anterior, se usa !# donde # es el número del comando.

rm documento (remove file)

comando --help (para cualquier comando)


git init (crear un nuevo control de versiones para la carpeta en cuestión)

si desde la terminal de git bash, escribimos code, nos abrirá una ventana de VS Code

git add filename.ext (añade el archivo a staged, para ser comiteado)

git rm --cached filename.ext  (saca el archivo del estado staged, es como deshacer el add)

Configuración del GIT

git config --list (muestra las configuraciónes hasta el momento en la maquina)

un solo guion, se usan iniciales.

-- es usar palabras completas

git config --global user.name "Julian Salva"

git config --global user.email "jsalvar124@gmail.com"

code filename.ext (abre el archivo para edición)

git show filename.ext (muestra el historial de cambios) para salir ESC, luego shift+z+z

git diff TagVersionVieja TagVersionNueva (muestra las diferencias entre dos commits culaquiera)











